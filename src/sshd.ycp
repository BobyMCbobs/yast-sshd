/**
 * File:	clients/sshd.ycp
 * Package:	Configuration of sshd
 * Summary:	Main file
 * Authors:	Lukas Ocilka <locilka@suse.cz>
 *
 * Main file for sshd configuration. Uses all other files.
 */

{

/***
 * <h3>Configuration of sshd</h3>
 */

textdomain "sshd";

/* The main () */
y2milestone ("----------------------------------------");
y2milestone ("Sshd module started");

import "Progress";
import "Report";
import "Summary";
import "SshdCommandLine";

import "CommandLine";
include "sshd/wizards.ycp";

map cmdline_description = $[
    "id" 	: "sshd",
    /* Command line help text for the Xsshd module */
    "help"	: _("Configuration of sshd"),
    "guihandler"        : SshdSequence,
    "initialize"        : Sshd::Read,
    "finish"            : Sshd::Write,
    "actions"           : $[
	"ports" : $[
	    "handler" : SshdCommandLine::CMDLinePorts,
	    // TRANSLATORS: CommandLine help
	    "help" : _("Ports used by SSHD Server"),
	    "example" : [
		"ports show",
		"ports add=512",
		"ports remove=22",
	    ],
	],
    ],
    "options"		: $[
	"show" : $[
	    // TRANSLATORS: CommandLine help
	    "help" : _("Show current settings"),
	],
	"add" : $[
	    "type" : "string",
	    // TRANSLATORS: CommandLine help
	    "help" : _("Add a new record"),
	],
	"remove" : $[
	    "type" : "string",
	    // TRANSLATORS: CommandLine help
	    "help" : _("Remove a record"),
	]
    ],
    "mappings"		: $[
	"ports" : [
	    "show", "add", "remove"
	]
    ]
];

/* main ui function */
any ret = nil;

ret = CommandLine::Run(cmdline_description);
y2debug("ret=%1", ret);

/* Finish */
y2milestone("Sshd module finished");
y2milestone("----------------------------------------");

return ret;

}
